" setting

" Vundleでプラグインをインストールするための設定
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" Vundleのプラグイン
Plugin 'VundleVim/Vundle.vim'
" lightlineのプラグイン
Plugin 'itchyny/lightline.vim'
" Wombat
Plugin 'Wombat'
" Pythonのプラグイン
Plugin 'davidhalter/jedi-vim'
" vim-flake8
Plugin 'nvie/vim-flake8'
" Black
Plugin 'ambv/black'
" NERDTree
Plugin 'scrooloose/nerdtree'
" nerdtree-git-plugin
Plugin 'xuyuanp/nerdtree-git-plugin'
" Syntastic
Plugin 'scrooloose/syntastic'
" fugitive.vim
Plugin 'tpope/vim-fugitive'
" Tagbar
Plugin 'majutsushi/tagbar'
" fzf
Plugin 'junegunn/fzf'
" dispatch.vim
Plugin 'tpope/vim-dispatch'
" vim-javascript
Plugin 'pangloss/vim-javascript'
" vim-jsx-pretty
Plugin 'maxmellon/vim-jsx-pretty'
" TypeScript
Plugin 'leafgarland/typescript-vim'
" Markdown syntax
Plugin 'plasticboy/vim-markdown'
" JSON.vim
Plugin 'elzr/vim-json'
" vim-yaml
Plugin 'stephpy/vim-yaml'
" vim-tmux-navigator
Plugin 'christoomey/vim-tmux-navigator'
" vim-ruby
Plugin 'vim-ruby/vim-ruby'
" rails.vim
Plugin 'tpope/vim-rails'
" rust.vim
Plugin 'rust-lang/rust.vim'
" omnisharp-vim
Plugin 'omnisharp/omnisharp-vim'
" vim-review
Plugin 'tokorom/vim-review'
" vimtex
Plugin 'lervag/vimtex'
" dockerfile.vim
Plugin 'ekalinin/dockerfile.vim'
" vim-ps1
Plugin 'pprovost/vim-ps1'
" html5.vim
Plugin 'othree/html5.vim'
" css
Plugin 'hail2u/vim-css3-syntax'
" Haml & scss
Plugin 'tpope/vim-haml'
" Gist
Plugin 'mattn/gist-vim'


call vundle#end()

"文字コードをUFT-8に設定
set fenc=utf-8
" バックアップファイルを作らない
set nobackup
" スワップファイルを作らない
set noswapfile
" 編集中のファイルが変更されたら自動で読み直す
set autoread
" バッファが編集中でもその他のファイルを開けるように
set hidden
" 入力中のコマンドをステータスに表示する
set showcmd


" 見た目系
" 行番号を表示
set number
" 現在の行を強調表示
set cursorline
" 現在の行を強調表示（縦）
set cursorcolumn
" 行末の1文字先までカーソルを移動できるように
set virtualedit=onemore
" インデントはスマートインデント
set smartindent
" ビープ音を可視化
set visualbell
" 括弧入力時の対応する括弧を表示
set showmatch
" ステータスラインを常に表示
set laststatus=2
" コマンドラインの補完
set wildmode=list:longest
" 折り返し時に表示行単位での移動できるようにする
nnoremap j gj
nnoremap k gk
" シンタックスハイライトの有効化
syntax on
colorscheme wombat

" 操作系
" マウス操作の有効化 & ホイール操作の有効化
set mouse=a
set ttymouse=xterm2


" Tab系
" 不可視文字を可視化(タブが「▸-」と表示される)
set list listchars=tab:\▸\-
" Tab文字を半角スペースにする
set expandtab
" 行頭以外のTab文字の表示幅（スペースいくつ分）
set tabstop=2
" 行頭でのTab文字の表示幅
set shiftwidth=2


" 検索系
" 検索文字列が小文字の場合は大文字小文字を区別なく検索する
set ignorecase
" 検索文字列に大文字が含まれている場合は区別して検索する
set smartcase
" 検索文字列入力時に順次対象文字列にヒットさせる
set incsearch
" 検索時に最後まで行ったら最初に戻る
set wrapscan
" 検索語をハイライト表示
set hlsearch
" ESC連打でハイライト解除
nmap <Esc><Esc> :nohlsearch<CR><Esc>

" chezmoi apply を常に実行する
autocmd BufWritePost ~/.local/share/chezmoi/* ! chezmoi apply --source-path "%"

" lightlineの色設定
let g:lightline = {
      \ 'colorscheme': 'one dark',
      \ }

" nerdtree git
let g:NERDTreeGitStatusIndicatorMapCustom = {
                \ 'Modified'  :'✹',
                \ 'Staged'    :'✚',
                \ 'Untracked' :'✭',
                \ 'Renamed'   :'➜',
                \ 'Unmerged'  :'═',
                \ 'Deleted'   :'✖',
                \ 'Dirty'     :'✗',
                \ 'Ignored'   :'☒',
                \ 'Clean'     :'✔︎',
                \ 'Unknown'   :'?',
                \ }

let g:NERDTreeGitStatusUseNerdFonts = 1

" JavaScript
let g:javascript_plugin_jsdoc = 1

" JSX
let g:vim_jsx_pretty_template_tags = 	['html', 'jsx', 'tsx']

" Rust
let g:rustfmt_autosave = 1

" C#
let g:OmniSharp_selector_ui = 'fzf'

" Gist
let g:gist_clip_command = 'xclip -selection clipboard'

" シンタックスチェック
let g:syntastic_cs_checkers = ['code_checker']

