### Load zsh-defer
source ~/zsh-defer/zsh-defer.plugin.zsh

{{ if eq .chezmoi.os "darwin" }}
### Path Helper for mac
eval "$(/usr/libexec/path_helper)"

### Setting Ruby
export PATH="/opt/homebrew/opt/ruby/bin:$PATH"
{{ end }}

### Load rbenv
eval "$(rbenv init - zsh)"

### Load nodenv
eval "$(nodenv init - --no-rehash)"

### Load pyenv
export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init --path)"
eval "$(pyenv init -)"

### Load starship
eval "$(starship init zsh)"

### Load sheldon
eval "$(sheldon source)"

# ### Zinit Settings

# if [[ ! -f $HOME/.zi/bin/zi.zsh ]]; then
#   print -P "%F{33}▓▒░ %F{160}Installing (%F{33}z-shell/zi%F{160})…%f"
#   command mkdir -p "$HOME/.zi" && command chmod g-rwX "$HOME/.zi"
#   command git clone -q --depth=1 --branch "main" https://github.com/z-shell/zi "$HOME/.zi/bin" && \
#     print -P "%F{33}▓▒░ %F{34}Installation successful.%f%b" || \
#     print -P "%F{160}▓▒░ The clone has failed.%f%b"
# fi
# source "$HOME/.zi/bin/zi.zsh"
# autoload -Uz _zi
# (( ${+_comps} )) && _comps[zi]=_zi
# # examples here -> https://z.digitalclouds.dev/docs/ecosystem/annexes
# zicompinit # <- https://z.digitalclouds.dev/docs/guides/commands
# eval "$(starship init zsh)"

# ### Added by Zinit's installer
# if [[ ! -f $HOME/.local/share/zinit/zinit.git/zinit.zsh ]]; then
#     print -P "%F{33} %F{220}Installing %F{33}ZDHARMA-CONTINUUM%F{220} Initiative Plugin Manager (%F{33}zdharma-continuum/zinit%F{220})…%f"
#     command mkdir -p "$HOME/.local/share/zinit" && command chmod g-rwX "$HOME/.local/share/zinit"
#     command git clone https://github.com/zdharma-continuum/zinit "$HOME/.local/share/zinit/zinit.git" && \
#         print -P "%F{33} %F{34}Installation successful.%f%b" || \
#         print -P "%F{160} The clone has failed.%f%b"
# fi

# source "$HOME/.local/share/zinit/zinit.git/zinit.zsh"
# autoload -Uz _zinit
# (( ${+_comps} )) && _comps[zinit]=_zinit

# # Load a few important annexes, without Turbo
# # (this is currently required for annexes)
# zinit light-mode for \
#     zdharma-continuum/zinit-annex-as-monitor \
#     zdharma-continuum/zinit-annex-bin-gem-node \
#     zdharma-continuum/zinit-annex-patch-dl \
#     zdharma-continuum/zinit-annex-rust

# ### End of Zinit's installer chunk

### Keybind settings

bindkey '^xb' anyframe-widget-cdr
autoload -Uz chpwd_recent_dirs cdr add-zsh-hook
add-zsh-hook chpwd chpwd_recent_dirs

bindkey '^xr' anyframe-widget-execute-history

bindkey '^x^b' anyframe-widget-checkout-git-branch

### exa config

if [[ $(command -v exa) ]]; then
  alias e='exa --icons --git'
  alias l=e
  alias ls=e
  alias ea='exa -a --icons --git'
  alias la=ea
  alias ee='exa -aahl --icons --git'
  alias ll=ee
  alias et='exa -T -L 3 -a -I "node_modules|.git|.cache" --icons'
  alias lt=et
  alias eta='exa -T -a -I "node_modules|.git|.cache" --color=always --icons | less -r'
  alias lta=eta
  alias l='clear && ls'
fi

if [[ $(command -v procs) ]]; then
  alias ps=procs
fi

if [[ $(command -v bat) ]]; then
  alias cat=bat
fi
